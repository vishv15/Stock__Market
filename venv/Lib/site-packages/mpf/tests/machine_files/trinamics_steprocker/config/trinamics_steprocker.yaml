#config_version=6

hardware:
  platform: virtual
  driverboards: virtual
  stepper_controllers: trinamics_steprocker

trinamics_steprocker:
  port: /dev/ttyACM0

steppers:
    #Scenario: 1.8 stepper that spins something continuously when activated; that you want to control in units of degrees
    #TODO: Add limit switches
#    velocityStepper:
#        number: 0
#        mode: velocity
#        move_current:  25 #percent
#        hold_current:  5 #percent
#        microstep_per_fullstep: 16 # 1/16 mode (1 step = 1/16 of a full step)
#        fullstep_per_userunit: 0.55 # UU = 1 Degree =  1 / 1.8 Degrees per Fullstep
#        velocity_limit: 360 #user units/sec   (so, 360 degrees per Sec)
#        acceleration_limit: 720 #user units/sec^2  (so, 720 degrees per Sec^2)


    # Scenario: 1.8 degree stepper attached to a 7:1 gear ratio with homing flag that you want to control in units of revolutions
    positionStepper:
        number: 0
        reset_position: 0
        reset_events: test_reset
        homing_direction: clockwise #when facing the shaft
        homing_mode: hardware
        named_positions:
             0.0: test_00
             0.6: test_01
             1.0: test_10
        platform_settings:
             move_current:  25 #percent
             hold_current:  5 #percent
             homing_speed: 0.1 #user units/sec
             microstep_per_fullstep: 16 # 1/16 mode (1 step = 1/16 of a full step)
             fullstep_per_userunit: 1400 # UU=1 Revolution = 200 full steps per rev (1.8 deg stepper) * 7 gear ratio
             velocity_limit: 0.5 #user units/sec   (so, 0.8 RPS of output gear )
             acceleration_limit: 2.0 #user units/sec^2  (so, 2 RPS^S of output gear)
